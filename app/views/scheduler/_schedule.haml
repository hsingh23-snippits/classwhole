-#
-# This view is responsible for displaying a user's schedule
-# - see scheduler_helper for any unfamiliar functions
-#
-# arr_sections = 
- onl_sections = remove_onl_sections(sections)
- range = hour_range(sections)
- start_hour = range[0] - 1
- end_hour = range[1]
-#start_hour = 7
-#end_hour  = 21
- sections_in_days = sections_by_days(sections)

- if @section_hints
  - section_hints_in_days = sections_by_days(@section_hints)
- else 
  - section_hints_in_days = {}

%div{:class => "schedule-wrapper" }
  %ul.time-label
    - for hour in (start_hour..end_hour)
      %li= print_hour(hour)
  - colors = section_colors( sections )
  - all_sections = sections
  - sections_in_days.each do |day_code, sections|
    -if all_sections.empty? and onl_sections.size > 0
      %h1 This schedule has only online and arranged sections.
      - break
    -elsif all_sections.empty?
      %h1 Sorry, we couldn't find a possible schedule.
      - break
    -else
      %ul{:class => "schedule-day #{day_code}", :day => day_code }
        %li.header= print_day(day_code)
        - for hour in (start_hour..end_hour)
          %li
        - sections.each do |section|
          = render 'section', :section => section, :start_hour => start_hour, :colors => colors
        - if section_hints_in_days[day_code]
          - section_hints_in_days[day_code].each do |section|
            %div.droppable= render 'section', :section => section, :start_hour => start_hour, :colors => colors
  %div.sidebar
    %ul.courses
      - courses, course_section_hash = courses_from_sections( sections )
      - courses.each do |course|
        - sections = course_section_hash[course.id]
        %li.course-item
          %ul.course
          %li
            %span.course-name= course.to_s
            %span.course-title= course.title
          %li 
            %span.title Credit Hours
            %span.data= "#{course.hours} hr."
          %li 
            %span.title Description
            %span.data= shorten(course.description, 130)
          - sections.each do |section|
            %ul.sections
              %li.header Sections
              - if section.instructor
                %li 
                  %span.title Professor
                  %span.data= section.instructor
              %li 
                %span.title Code
                %span.data= section.code
              %li 
                %span.title Time
                %span.data= section.duration_s
    %a{ :class => "btn default save-schedule"} Save
    %a{ "data-controls-modal" => "register-modal", "data-backdrop" => "static", "data-keyboard" => "true", :class => "btn primary register-schedule"} Register
      
  - if !onl_sections.empty?
    %ul.onl_sections
      %li.header Online/Arranged
      %li
        - onl_sections.each do |onl_section|
          %span.course=onl_section.course.to_s
          %span.code=onl_section.code
          %span.type=onl_section.section_type
